import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:uuid/uuid.dart';
import 'package:intl/intl.dart'; // Add this import
import 'package:pkl_satunadi/colors.dart';
import 'package:pkl_satunadi/screens/detail_rsvp.dart';
import 'package:pkl_satunadi/screens/resume_rsvp.dart';
import 'package:pkl_satunadi/services/firestore_reservasi_service.dart';

class AppointmentCalendarScreen extends StatefulWidget {
  @override
  _AppointmentCalendarScreenState createState() => _AppointmentCalendarScreenState();
}

class _AppointmentCalendarScreenState extends State<AppointmentCalendarScreen> {
  DateTime selectedDate = DateTime.now();
  int? _currentIndex;
  String selectedPoliklinik = "";
  String selectedMetodePembayaran = "";
  final String namaDokter = "dr. John Doe"; // Define the doctor's name here

  final FirestoreReservasiService _firestoreService = FirestoreReservasiService();
  final String reservasiId = Uuid().v4(); // Generate a unique ID for the reservation

  @override
  void initState() {
    super.initState();
    _fetchInitialData();
  }

  Future<void> _fetchInitialData() async {
    // Fetch data from Firestore and set the state
    var poliklinikData = await _firestoreService.getPoliklinikList();
    var metodePembayaranData = await _firestoreService.getMetodePembayaranList();

    setState(() {
      if (poliklinikData.isNotEmpty) {
        selectedPoliklinik = poliklinikData.first;
      }
      if (metodePembayaranData.isNotEmpty) {
        selectedMetodePembayaran = metodePembayaranData.first;
      }
    });
  }

  Future<void> _selectDate(BuildContext context) async {
    final DateTime? picked = await showDatePicker(
      context: context,
      initialDate: selectedDate,
      firstDate: DateTime(1985),
      lastDate: DateTime(2027),
    );

    if (picked != null && picked != selectedDate) {
      setState(() {
        selectedDate = picked;
      });
    }
  }

  void _confirmAppointment() async {
    User? user = FirebaseAuth.instance.currentUser;
    if (user != null) {
      // User is signed in, proceed with Firestore operation
      print("User is authenticated: ${user.uid}");
      try {
        // Format the selected date to include only the date part
        String formattedDate = DateFormat('yyyy-MM-dd').format(selectedDate);
        
        await _firestoreService.tambahReservasi(
          selectedPoliklinik,
          selectedMetodePembayaran,
          namaDokter,
          formattedDate, // Use the formatted date here
          "${_currentIndex! + 9}:00 ${_currentIndex! + 9 > 11 ? "PM" : "AM"}",
          reservasiId: reservasiId, // Pass the pre-generated ID
        );
        print("Reservasi berhasil ditambahkan dengan ID: $reservasiId");
        _navigateToResumeRsvpPage();
      } catch (e) {
        print("Error adding reservation: $e");
      }
    } else {
      // User is not signed in, handle accordingly
      print("User is not authenticated.");
    }
  }

  void _navigateToResumeRsvpPage() {
  Navigator.push(
    context,
    MaterialPageRoute(
      builder: (context) => ResumeRsvpPage(
        reservasiId: reservasiId,
        poliklinik: selectedPoliklinik,
        metodePembayaran: selectedMetodePembayaran,
        reservasi: {
          'reservasiId': reservasiId,
          'poliklinik': selectedPoliklinik,
          'metodePembayaran': selectedMetodePembayaran,
          'namaDokter': namaDokter,
          'tanggal': DateFormat('yyyy-MM-dd').format(selectedDate),
          'waktu': "${_currentIndex! + 9}:00 ${_currentIndex! + 9 > 11 ? "PM" : "AM"}",
        },
      ),
    ),
  );
}

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: CustomScrollView(
        slivers: [
          SliverAppBar(
            expandedHeight: MediaQuery.of(context).size.height / 2.1,
            flexibleSpace: Container(
              decoration: BoxDecoration(
                image: DecorationImage(
                  image: AssetImage("assets/images/doctor4.jpg"),
                  fit: BoxFit.cover,
                ),
                borderRadius: BorderRadius.only(
                  bottomLeft: Radius.circular(20),
                  bottomRight: Radius.circular(20),
                ),
                gradient: LinearGradient(
                  colors: [
                    pColor.withOpacity(0.9),
                    pColor.withOpacity(0),
                    pColor.withOpacity(0),
                  ],
                  begin: Alignment.bottomCenter,
                  end: Alignment.topCenter,
                ),
              ),
              child: Container(),
            ),
            leading: IconButton(
              icon: Icon(Icons.arrow_back),
              onPressed: () {
                Navigator.pop(context);
              },
            ),
          ),
          SliverToBoxAdapter(
            child: Column(
              children: [
                const SizedBox(height: 20),
                Container(
                  padding: const EdgeInsets.all(10),
                  decoration: BoxDecoration(
                    color: pColor,
                    borderRadius: BorderRadius.circular(10),
                  ),
                  child: Align(
                    alignment: Alignment.center,
                    child: Text(
                      namaDokter, // Use the defined doctor's name
                      style: TextStyle(
                        fontSize: 28,
                        fontWeight: FontWeight.w500,
                        color: Colors.white,
                        fontFamily: 'YourCustomFont',
                      ),
                    ),
                  ),
                ),
                const SizedBox(height: 20),
                ElevatedButton(
                  onPressed: () => _selectDate(context),
                  style: ElevatedButton.styleFrom(
                    backgroundColor: pColor,
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(10),
                    ),
                  ),
                  child: const Padding(
                    padding: EdgeInsets.all(10),
                    child: Text(
                      "Pilih tanggal",
                      style: TextStyle(
                        fontSize: 18,
                        fontWeight: FontWeight.bold,
                        color: Colors.white,
                      ),
                    ),
                  ),
                ),
                const SizedBox(height: 20),
                const Text(
                  'Tanggal yang dipilih',
                  style: TextStyle(fontSize: 20),
                ),
                const SizedBox(height: 10),
                Text(
                  DateFormat('yyyy-MM-dd').format(selectedDate), // Display the formatted date
                  style: const TextStyle(
                    fontSize: 24,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                const SizedBox(height: 20),
              ],
            ),
          ),
          SliverPadding(
            padding: const EdgeInsets.symmetric(horizontal: 20),
            sliver: SliverGrid(
              gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
                crossAxisCount: 3,
                crossAxisSpacing: 8.0,
                mainAxisSpacing: 8.0,
              ),
              delegate: SliverChildBuilderDelegate(
                (BuildContext context, int index) {
                  return InkWell(
                    onTap: () {
                      setState(() {
                        _currentIndex = index;
                      });
                    },
                    child: Container(
                      decoration: BoxDecoration(
                        color: _currentIndex == index ? Colors.blue : Colors.grey,
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      alignment: Alignment.center,
                      child: Text(
                        '${index + 9}:00 ${index + 9 > 11 ? "PM" : "AM"}',
                        style: TextStyle(
                          fontWeight: FontWeight.bold,
                          color: _currentIndex == index ? Colors.white : Colors.black,
                        ),
                      ),
                    ),
                  );
                },
                childCount: 9,
              ),
            ),
          ),
          SliverToBoxAdapter(
            child: Padding(
              padding: const EdgeInsets.fromLTRB(20, 20, 20, 40),
              child: ElevatedButton(
                onPressed: _confirmAppointment,
                style: ElevatedButton.styleFrom(
                  backgroundColor: pColor,
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                ),
                child: Padding(
                  padding: const EdgeInsets.all(10),
                  child: Text(
                    "Buat Perjanjian",
                    style: TextStyle(
                      fontSize: 18,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }
}